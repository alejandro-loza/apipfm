plugins {
    id "groovy"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "application"
    id 'org.liquibase.gradle' version '2.0.1'
    id 'jacoco'
}

version "1.1.1"
group "mx.finerio.pfm.api"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
    jcenter()
    maven { url "https://oss.jfrog.org/oss-snapshot-local" }
}

configurations {
    developmentOnly
}

dependencies {
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    compileOnly platform("io.micronaut:micronaut-bom:$micronautVersion")
    compileOnly "io.micronaut:micronaut-inject-groovy"
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation  "io.micronaut:micronaut-runtime-groovy"
    implementation  'io.micronaut:micronaut-function-groovy'
    implementation  "io.micronaut.configuration:micronaut-hibernate-gorm"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    implementation 'io.micronaut.configuration:micronaut-liquibase'
    implementation 'org.liquibase:liquibase-groovy-dsl:2.0.3'
    compile group: 'com.oracle.ojdbc', name: 'ojdbc8', version: '19.3.0.0'

    annotationProcessor "io.micronaut:micronaut-security-annotations:2.0.0.BUILD-SNAPSHOT"
    implementation "io.micronaut:micronaut-security-jwt"

    implementation "org.springframework.security:spring-security-crypto:${springSecurityCryptoVersion}"

    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    runtime "com.h2database:h2"
    runtime "org.apache.tomcat:tomcat-jdbc:8.5.0"

    runtime 'mysql:mysql-connector-java:5.1.39'
    implementation "io.micronaut.configuration:micronaut-jdbc-hikari"

    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation("org.spockframework:spock-core") {
        exclude group: "org.codehaus.groovy", module: "groovy-all"
    }
    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation "io.micronaut.test:micronaut-test-spock"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testImplementation "io.micronaut:micronaut-http-client"

}

test.classpath += configurations.developmentOnly

mainClassName = "mx.finerio.pfm.api.Application"
tasks.withType(GroovyCompile) {
    groovyOptions.forkOptions.jvmArgs.add('-Dgroovy.parameters=true')
}

shadowJar {
    mergeServiceFiles()
}

tasks.withType(JavaExec) {
    classpath += configurations.developmentOnly
    jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote', '-Dmicronaut.config.files=file:application.yml')
}

tasks.withType(GroovyCompile) {
    groovyOptions.forkOptions.jvmArgs.add('-Dgroovy.parameters=true')
}

jacoco {
    toolVersion = "0.8.3"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

test.finalizedBy jacocoTestReport
